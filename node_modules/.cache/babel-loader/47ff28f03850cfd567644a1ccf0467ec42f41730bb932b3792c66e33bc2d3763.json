{"ast":null,"code":"import { ADD_FAV, FILTER, REMOVE_FAV, ORDER } from \"./action-type\";\nexport const initialState = {\n  myFavorites: [],\n  allCharactersFav: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharactersFav, payload],\n        allCharactersFav: [...state.allCharactersFav, payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(fav => fav.id !== Number(payload))\n      };\n    case FILTER:\n      const allCharactersFiltered = state.allCharactersFav.filter(character => {\n        return character.gender === payload;\n      });\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered\n      };\n    case ORDER:\n      const allCharactersFavCopy = state.allCharactersFav.sort((a, b) => {\n        if (payload === 'A') {\n          if (a.id < b.id) return -1;\n          if (b.id < a.id) return 1;\n          return 0;\n        } else {\n          if (a.id < b.id) return 1;\n          if (b.id < a.id) return -1;\n          return 0;\n        }\n      });\n      return allCharactersFavCopy;\n      break;\n    // return {\n    //     ...state,\n    //     myFavorites: \n    //             payload === 'A'\n    //             ? allCharactersFavCopy.sort((a, b) => { a.id - b.id }) \n    //             : allCharactersFavCopy.sort((a, b) => { b.id - a.id })\n    // }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","FILTER","REMOVE_FAV","ORDER","initialState","myFavorites","allCharactersFav","reducer","state","arguments","length","undefined","type","payload","filter","fav","id","Number","allCharactersFiltered","character","gender","allCharactersFavCopy","sort","a","b"],"sources":["/Users/juanpablo/Desktop/rick_and_morty/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, FILTER, REMOVE_FAV, ORDER } from \"./action-type\";\n\nexport const initialState = {\n    myFavorites: [],\n    allCharactersFav: []\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ADD_FAV:\n            return {\n                ...state,\n                myFavorites: [...state.allCharactersFav, payload],\n                allCharactersFav: [...state.allCharactersFav, payload]\n            }\n        \n        case REMOVE_FAV:\n            return {\n                ...state,\n                myFavorites: state.myFavorites.filter(fav => fav.id !== Number(payload))\n            }\n        \n        case FILTER:\n            const allCharactersFiltered = state.allCharactersFav.filter((character) => { return character.gender === payload })\n            return {\n                ...state,\n                myFavorites: allCharactersFiltered\n            }         \n        \n        case ORDER:\n            const allCharactersFavCopy = state.allCharactersFav.sort((a, b) => {\n                if (payload === 'A') {\n                    if (a.id < b.id) return -1;\n                    if (b.id < a.id) return 1;\n                    return 0;\n                }\n                else {\n                    if (a.id < b.id) return 1;\n                    if (b.id < a.id) return -1;\n                    return 0;\n                }\n            })\n            return allCharactersFavCopy;\n            break;\n            // return {\n            //     ...state,\n            //     myFavorites: \n            //             payload === 'A'\n            //             ? allCharactersFavCopy.sort((a, b) => { a.id - b.id }) \n            //             : allCharactersFavCopy.sort((a, b) => { b.id - a.id })\n            // }\n        default:\n            return { ...state };\n    }\n}\n\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAElE,OAAO,MAAMC,YAAY,GAAG;EACxBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,IAAI;IACR,KAAKZ,OAAO;MACR,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,gBAAgB,EAAEO,OAAO,CAAC;QACjDP,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAgB,EAAEO,OAAO;MACzD,CAAC;IAEL,KAAKX,UAAU;MACX,OAAO;QACH,GAAGM,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACS,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKC,MAAM,CAACJ,OAAO,CAAC;MAC3E,CAAC;IAEL,KAAKZ,MAAM;MACP,MAAMiB,qBAAqB,GAAGV,KAAK,CAACF,gBAAgB,CAACQ,MAAM,CAAEK,SAAS,IAAK;QAAE,OAAOA,SAAS,CAACC,MAAM,KAAKP,OAAO;MAAC,CAAC,CAAC;MACnH,OAAO;QACH,GAAGL,KAAK;QACRH,WAAW,EAAEa;MACjB,CAAC;IAEL,KAAKf,KAAK;MACN,MAAMkB,oBAAoB,GAAGb,KAAK,CAACF,gBAAgB,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC/D,IAAIX,OAAO,KAAK,GAAG,EAAE;UACjB,IAAIU,CAAC,CAACP,EAAE,GAAGQ,CAAC,CAACR,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,IAAIQ,CAAC,CAACR,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAE,OAAO,CAAC;UACzB,OAAO,CAAC;QACZ,CAAC,MACI;UACD,IAAIO,CAAC,CAACP,EAAE,GAAGQ,CAAC,CAACR,EAAE,EAAE,OAAO,CAAC;UACzB,IAAIQ,CAAC,CAACR,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC;MACF,OAAOK,oBAAoB;MAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;MACI,OAAO;QAAE,GAAGb;MAAM,CAAC;EAAC;AAEhC,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}